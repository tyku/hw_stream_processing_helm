apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-initdb"
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ .Release.Name }}
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      initContainers:
        - name: check-db-ready
          image: postgres:latest
          env:
            - name: POSTGRES_HOST
              value: {{ include "postgresql.fullname" . | quote }}
            - name: POSTGRES_PORT
              value: {{ .Values.postgresql.service.port | quote }}
          command:
            - sh
            - "-c"
            - |
              until pg_isready -h $POSTGRES_HOST  -p  $POSTGRES_PORT;
              do echo waiting for database; sleep 2; done;
      containers:
        - name: post-install-job
          image: "{{ .Values.serviceInstance.image.repository }}:{{ .Values.serviceInstance.image.tag }}"
          env:
            - name: SERVICE_NAME
              value: {{ .Values.serviceInstance.nameOverride }}
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Values.serviceInstance.nameOverride }}-config"
                  key: NODE_ENV
            - name: PG_HOST
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Values.serviceInstance.nameOverride }}-config"
                  key: DB_HOST
            - name: PG_PORT
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Values.serviceInstance.nameOverride }}-config"
                  key: DB_PORT
            - name: PG_DB
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Values.serviceInstance.nameOverride }}-config"
                  key: DB_NAME
            - name: PG_USER
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.serviceInstance.nameOverride }}-secret"
                  key: DB_USER
            - name: PG_PASSWD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.serviceInstance.nameOverride }}-secret"
                  key: DB_PSWD
          command:
            - npm
            - run
            - typeorm:run
            - --service={{ .Values.serviceInstance.nameOverride }}
  backoffLimit: 0
