---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app-helm.fullname" . }}
  namespace: default
  labels:
      app: {{ .Values.serviceInstance.nameOverride }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Values.serviceInstance.nameOverride }}
  template:
    metadata:
      labels:
        app: {{ .Values.serviceInstance.nameOverride }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
    spec:
      containers:
        - name: {{ .Values.serviceInstance.nameOverride }}
          image: "{{ .Values.serviceInstance.image.repository }}:{{ .Values.serviceInstance.image.tag }}"
          imagePullPolicy: {{ .Values.serviceInstance.image.imagePullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.serviceInstance.containerPort }}
          env:
            - name: SERVICE_NAME
              value: {{ .Values.serviceInstance.nameOverride }}
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Values.serviceInstance.nameOverride }}-config"
                  key: APP_PORT
            - name: KAFKA_BROKER
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Values.serviceInstance.nameOverride }}-config"
                  key: KAFKA_BROKER
            - name: KAFKA_PORT
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Values.serviceInstance.nameOverride }}-config"
                  key: KAFKA_PORT
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Values.serviceInstance.nameOverride }}-config"
                  key: NODE_ENV
            - name: PG_HOST
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Values.serviceInstance.nameOverride }}-config"
                  key: DB_HOST
            - name: PG_PORT
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Values.serviceInstance.nameOverride }}-config"
                  key: DB_PORT
            - name: PG_DB
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Values.serviceInstance.nameOverride }}-config"
                  key: DB_NAME
            - name: PG_USER
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.serviceInstance.nameOverride }}-secret"
                  key: DB_USER
            - name: PG_PASSWD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.serviceInstance.nameOverride }}-secret"
                  key: DB_PSWD
          command:
            - npm
            - run
            - start
            - {{ .Values.serviceInstance.nameOverride }}
